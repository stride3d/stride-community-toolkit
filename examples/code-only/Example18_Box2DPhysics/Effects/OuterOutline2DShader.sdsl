shader OuterOutline2DShader : ShaderBase, Transformation, Texturing, PositionStream4
{
    stage stream float3 Normal : NORMAL;

    float4 Color;
    float Intensity;
    // World or planar thickness (in model units) added around the shape.
    float OutlineThickness;

    cbuffer PerView
    {
        stage float4 Viewport;
    }

    // Projects vertex to clip space applying an outline expansion for 2D meshes only.
    float4 projToWorld(in float4 pos, in float3 normal)
    {
        // Uniform planar scale around origin in XY only (keep original Z)
        float scaleFactor = 1 + OutlineThickness; // simple multiplicative expansion
        float2 scaledXY = pos.xy * scaleFactor;
        return mul(float4(scaledXY, pos.z, 1), WorldViewProjection);
    }

    stage override void VSMain()
    {
        streams.ShadingPosition = projToWorld(streams.Position, streams.Normal);
    }

    stage override void PSMain()
    {
        streams.ColorTarget = Color * Intensity;
    }
};