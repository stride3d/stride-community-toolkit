<div class="card bg-@GetEntityType()-subtle">
    <div class="card-header text-bg-@GetEntityType()">
        <strong>@Title</strong>
    </div>
    <div class="card-body">
        <p class="card-text"><strong>Total:</strong> 10</p>
        <p class="card-text">@Description</p>
        <button @onclick="RequestEntitiesAsync" class="btn btn-sm btn-@GetEntityType()">Give me @Title</button>
    </div>
    <div class="card-footer mb-2">
        <div class="mt-1 mb-3">
            <input type="text" class="form-control" id="floatingInputValue" placeholder="Message" @bind="inputValue">
        </div>
        <button @onclick="SendMessageAsync" class="btn btn-sm btn-@GetEntityType()">Send message</button>
    </div>
</div>
@code {
    [Parameter]
    public required string Title { get; set; }
    [Parameter]
    public string? Description { get; set; } = "Some quick example text to build on the card title and make up the bulk of the card's content.";
    [Parameter]
    public EntityType Type { get; set; } = EntityType.Success;
    [Parameter]
    public EventCallback<MessageDto> MessageCallback { get; set; }
    [Parameter]
    public EventCallback<CountDto> CountCallback { get; set; }

    private string? inputValue;
    private string GetEntityType() => Type.ToString().ToLowerInvariant();

    private async Task SendMessageAsync()
    {
        var message = new MessageDto
            {
                Type = Type,
                Text = string.IsNullOrWhiteSpace(inputValue) ? Constants.DefaultMessage : inputValue
            };

        await MessageCallback.InvokeAsync(message);

        inputValue = string.Empty;
    }

    private async Task RequestEntitiesAsync()
    {
        var count = new CountDto
            {
                Type = Type,
                Count = 10
            };

        await CountCallback.InvokeAsync(count);
    }
}
